<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.gene.mapper.VipcountMapper" >
  <resultMap id="BaseResultMap" type="cn.com.gene.pojo.Vipcount" >
    <id column="userid" property="userid" jdbcType="BIGINT" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="isvip" property="isvip" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="account" property="account" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userid, count, isvip, createtime, balance, account
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.gene.pojo.VipcountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vipcount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from vipcount
    where userid = #{userid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from vipcount
    where userid = #{userid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.gene.pojo.VipcountExample" >
    delete from vipcount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.gene.pojo.Vipcount" >
    insert into vipcount (userid, count, isvip, 
      createtime, balance, account
      )
    values (#{userid,jdbcType=BIGINT}, #{count,jdbcType=INTEGER}, #{isvip,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{balance,jdbcType=DOUBLE}, #{account,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.gene.pojo.Vipcount" >
    insert into vipcount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="isvip != null" >
        isvip,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="account != null" >
        account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="isvip != null" >
        #{isvip,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="account != null" >
        #{account,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.gene.pojo.VipcountExample" resultType="java.lang.Integer" >
    select count(*) from vipcount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update vipcount
    <set >
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.isvip != null" >
        isvip = #{record.isvip,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DOUBLE},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update vipcount
    set userid = #{record.userid,jdbcType=BIGINT},
      count = #{record.count,jdbcType=INTEGER},
      isvip = #{record.isvip,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      balance = #{record.balance,jdbcType=DOUBLE},
      account = #{record.account,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.gene.pojo.Vipcount" >
    update vipcount
    <set >
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="isvip != null" >
        isvip = #{isvip,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=DOUBLE},
      </if>
    </set>
    where userid = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.gene.pojo.Vipcount" >
    update vipcount
    set count = #{count,jdbcType=INTEGER},
      isvip = #{isvip,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      balance = #{balance,jdbcType=DOUBLE},
      account = #{account,jdbcType=DOUBLE}
    where userid = #{userid,jdbcType=BIGINT}
  </update>
</mapper>