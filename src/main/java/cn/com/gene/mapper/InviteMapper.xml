<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.gene.mapper.InviteMapper" >
  <resultMap id="BaseResultMap" type="cn.com.gene.pojo.Invite" >
    <id column="inviteid" property="inviteid" jdbcType="BIGINT" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="followuserid" property="followuserid" jdbcType="BIGINT" />
    <result column="account" property="account" jdbcType="DOUBLE" />
    <result column="level" property="level" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    inviteid, userid, followuserid, account, level
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.gene.pojo.InviteExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from invite
    where inviteid = #{inviteid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from invite
    where inviteid = #{inviteid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.gene.pojo.InviteExample" >
    delete from invite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.gene.pojo.Invite" >
    insert into invite (inviteid, userid, followuserid, 
      account, level)
    values (#{inviteid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{followuserid,jdbcType=BIGINT}, 
      #{account,jdbcType=DOUBLE}, #{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.gene.pojo.Invite" >
    insert into invite
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="inviteid != null" >
        inviteid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="followuserid != null" >
        followuserid,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="level != null" >
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="inviteid != null" >
        #{inviteid,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="followuserid != null" >
        #{followuserid,jdbcType=BIGINT},
      </if>
      <if test="account != null" >
        #{account,jdbcType=DOUBLE},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.gene.pojo.InviteExample" resultType="java.lang.Integer" >
    select count(*) from invite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update invite
    <set >
      <if test="record.inviteid != null" >
        inviteid = #{record.inviteid,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.followuserid != null" >
        followuserid = #{record.followuserid,jdbcType=BIGINT},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=DOUBLE},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update invite
    set inviteid = #{record.inviteid,jdbcType=BIGINT},
      userid = #{record.userid,jdbcType=BIGINT},
      followuserid = #{record.followuserid,jdbcType=BIGINT},
      account = #{record.account,jdbcType=DOUBLE},
      level = #{record.level,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.gene.pojo.Invite" >
    update invite
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="followuserid != null" >
        followuserid = #{followuserid,jdbcType=BIGINT},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=DOUBLE},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where inviteid = #{inviteid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.gene.pojo.Invite" >
    update invite
    set userid = #{userid,jdbcType=BIGINT},
      followuserid = #{followuserid,jdbcType=BIGINT},
      account = #{account,jdbcType=DOUBLE},
      level = #{level,jdbcType=INTEGER}
    where inviteid = #{inviteid,jdbcType=BIGINT}
  </update>
</mapper>